{"version":3,"sources":["components/ElementContactList/ElementContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ElementContactList/ElementContactList.container.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","components/localStorage/localStorage.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsAction","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","ContactForm","state","props","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","addNoRepeatContact","contacts","some","toLowerCase","alert","onSubmit","reset","handleSubmit","preventDefault","this","className","s","form","htmlFor","span","input","type","onChange","pattern","title","required","button","Component","defaultProps","connect","items","dispatch","filterInputId","filter","onChangeFilter","target","ElementContactList","map","item","btnList","onClick","getVisibleContacts","normalizedFilter","trim","contact","includes","ContactList","list","Container","children","container","App","prevProps","prevState","nextContacts","localStorage","setItem","JSON","stringify","contactsLocale","getItem","parsedContacts","parse","initialContacts","contactsTest","createReducer","action","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77644524.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ElementContactList_item__3HW-i\",\"span\":\"ElementContactList_span__W9x1X\",\"btnList\":\"ElementContactList_btnList__1TRNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2YELS\",\"span\":\"Filter_span__3Sk-E\",\"input\":\"Filter_input__1Dcc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3scDD\",\"title\":\"Container_title__u5Wk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1FPzO\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\n// ----------------first-step-------------------\n// import types from './contacts-types';\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n//--------------------------------------------------------------------------------\n\n// ---------------second-step-----------------------------------------------------\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsAction = { addContact, deleteContact, changeFilter };\nexport default contactsAction;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport contactsAction from 'redux/contacts/contacts-actions';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addNoRepeatContact = (state, contacts) => {\n    const { name, number } = state;\n    if (\n      contacts.some(\n        contacts => contacts.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some(contacts => contacts.number === number)) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(state);\n    this.reset();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { contacts } = this.props;\n    this.addNoRepeatContact(this.state, contacts);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId} className=\"lable\">\n            <span className={s.span}>Name</span>\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              id={this.nameInputId}\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId} className=\"lable\">\n            <span className={s.span}>Number</span>\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              id={this.numberInputId}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsAction from 'redux/contacts/contacts-actions';\n\nimport s from './Filter.module.css';\n\nconst filterInputId = uuidv4();\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label htmlFor={filterInputId}>\n      <span className={s.span}>Find contacts by name and number</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        id={filterInputId}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(contactsAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ElementContactList.module.css';\n\nconst ElementContactList = ({ contacts, deleteContact }) => {\n  return contacts.map(({ name, number, id }) => {\n    return (\n      <li className={s.item} key={id}>\n        <span className={s.span}></span>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={s.btnList}\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nElementContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ElementContactList;\n","import { connect } from 'react-redux';\n\nimport contactsAction from 'redux/contacts/contacts-actions';\nimport ElementContactList from './ElementContactList';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.includes(filter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(contactsAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementContactList);\n","import React from 'react';\n\nimport ElementContactList from 'components/ElementContactList';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  return (\n    <ul className={s.list}>\n      <ElementContactList />\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children, title }) => (\n  <div className={s.container}>\n    <h1 className={s.title}>{title}</h1>\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Container from 'components/Container';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.props.contacts;\n    const prevContacts = prevProps.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  render() {\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import contactsTest from 'data/contactsTest.json';\n\nconst contactsLocale = localStorage.getItem('contacts');\nconst parsedContacts = JSON.parse(contactsLocale);\nconst initialContacts = parsedContacts ? parsedContacts : contactsTest;\n\nexport default initialContacts;\n","import { combineReducers } from 'redux';\n\nimport initialContacts from 'components/localStorage';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsAction from './contacts-actions';\n\n// ----------------first-step-------------------\n// import types from './contacts-types';\n// import contactsTest from 'data/contactsTest.json';\n// import parsedContacts from 'components/localStorage';\n// import stateItemNoRepeat from 'components/helpersReducer';\n\n// const items = (\n//   state = parsedContacts ? parsedContacts : contactsTest,\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (\n//         state.some(\n//           ({ name }) => name.toLowerCase() === payload.name.toLowerCase(),\n//         )\n//       ) {\n//         alert(`${payload.name} is already in contacts`);\n//         return [...state];\n//       }\n//       if (state.some(({ number }) => number === payload.number)) {\n//         alert(`${payload.number} is already in contacts`);\n//         return [...state];\n//       }\n\n//       return [payload, ...state];\n\n// // stateItemNoRepeat(state, action),\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n//----------------------------------------------------------------------\n\n// ---------------second-step--------------------------------------------\n\nconst items = createReducer(initialContacts, {\n  [contactsAction.addContact]: (state, action) => [action.payload, ...state],\n  [contactsAction.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\nconst filter = createReducer('', {\n  [contactsAction.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\n// ----------------first-step-------------------\n// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n//----------------------------------------------------------------------\n\n// ---------------second-step--------------------------------------------\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__jt-zu\",\"input\":\"ContactForm_input__180v8\",\"span\":\"ContactForm_span__2bkul\",\"button\":\"ContactForm_button__9nMjg\"};"],"sourceRoot":""}